1. When would you want to create a remote repository rather than keeping all your work local?
 
 	If you work with a team or if you need to work on multiple computers.

2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	You don't want to risk having your work overwritten by older work or by someone elses work.

3. Describe the differences between forks, clones, and branches. When would you use one instead of another?

	I would use fork when basing work off someone else's repository but not having permission or relation with the original repository. I would clone when I want to keep the repository in its current state but continue to work on it, or copy someone else's repository. I would create a branch when the master is in a good individual state but I want to try something or build new things on it without disturbing it, for example if it were a "production" version of the code.

4. What is the benefit of having a copy of the last known state of the remote stored locally?

	Back-up in case something you push is destructive or very time consuming to revert back to.

5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	I would use Dropbox. It would have less steps to update files. It would be harder to keep backups and to merge changes in collaborative efforts.

6. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	If you're working on a new feature. Working on master is faster and easier to track.